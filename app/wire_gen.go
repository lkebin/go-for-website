// Code generated by Wire. DO NOT EDIT.

//go:generate wire
//+build !wireinject

package app

import (
	"buhaoyong/app/api"
	"buhaoyong/app/website"
	"buhaoyong/pkg/db"
	"buhaoyong/pkg/service/post"
	"fmt"
	"github.com/google/wire"
	"github.com/gorilla/mux"
	"github.com/spf13/viper"
)

// Injectors from wire.go:

func SetupComponent() (*Component, error) {
	router := mux.NewRouter()
	config, err := dbConfigProvider()
	if err != nil {
		return nil, err
	}
	dbDB, err := db.New(config)
	if err != nil {
		return nil, err
	}
	component := New(router, dbDB)
	return component, nil
}

func SetupAPI(c *Component) (api.Repository, error) {
	config, err := apiConfigProvider()
	if err != nil {
		return nil, err
	}
	router := c.Router
	repository := api.New(config, router)
	return repository, nil
}

func SetupWebsite(c *Component) (website.Repository, error) {
	config, err := websiteConfigProvider()
	if err != nil {
		return nil, err
	}
	router := c.Router
	repository, err := postServiceProvider(c)
	if err != nil {
		return nil, err
	}
	websiteRepository := website.New(config, router, repository)
	return websiteRepository, nil
}

func postServiceProvider(c *Component) (post.Repository, error) {
	dbDB := c.DB
	repository := post.New(dbDB)
	return repository, nil
}

// wire.go:

var (
	dbSet = wire.NewSet(db.New, dbConfigProvider)
)

func apiConfigProvider() (*api.Config, error) {
	var c api.Config
	key := "api"
	if !viper.IsSet(key) {
		return nil, fmt.Errorf("missing %s config", key)
	}

	if err := viper.UnmarshalKey(key, &c); err != nil {
		return nil, fmt.Errorf("can not decode api config: %w", err)
	}
	return &c, nil
}

func websiteConfigProvider() (*website.Config, error) {
	var c website.Config
	key := "website"
	if !viper.IsSet(key) {
		return nil, fmt.Errorf("missing %s config", key)
	}

	if err := viper.UnmarshalKey(key, &c); err != nil {
		return nil, fmt.Errorf("can not decode website config: %w", err)
	}
	return &c, nil
}

func dbConfigProvider() (*db.Config, error) {
	var c db.Config
	key := "database"
	if !viper.IsSet(key) {
		return nil, fmt.Errorf("missing %s config", key)
	}

	if err := viper.UnmarshalKey(key, &c); err != nil {
		return nil, fmt.Errorf("can not decode database config: %w", err)
	}
	return &c, nil
}
